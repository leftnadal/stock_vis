# Generated by Django 5.2.4 on 2025-10-17 12:24

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PriceDataView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_symbol', models.CharField(max_length=20)),
                ('data_type', models.CharField(max_length=10)),
                ('date', models.DateField()),
                ('open_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('high_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('low_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('close_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('volume', models.BigIntegerField()),
            ],
            options={
                'db_table': 'price_data_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('symbol', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('asset_type', models.CharField(blank=True, max_length=50, null=True)),
                ('stock_name', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('exchange', models.CharField(blank=True, max_length=50, null=True)),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('KRW', 'KRW')], default='USD', max_length=10)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('sector', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('official_site', models.URLField(blank=True, null=True)),
                ('fiscal_year_end', models.CharField(blank=True, max_length=20, null=True)),
                ('latest_quarter', models.DateField(blank=True, null=True)),
                ('open_price', models.DecimalField(decimal_places=4, default=0.0, max_digits=15)),
                ('high_price', models.DecimalField(decimal_places=4, default=0.0, max_digits=15)),
                ('low_price', models.DecimalField(decimal_places=4, default=0.0, max_digits=15)),
                ('real_time_price', models.DecimalField(decimal_places=4, default=0.0, max_digits=15)),
                ('volume', models.BigIntegerField(default=0)),
                ('previous_close', models.DecimalField(decimal_places=4, default=0.0, max_digits=15)),
                ('change', models.DecimalField(decimal_places=4, default=0.0, max_digits=15)),
                ('change_percent', models.CharField(blank=True, max_length=20, null=True)),
                ('market_capitalization', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('ebitda', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('pe_ratio', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('peg_ratio', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('book_value', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('dividend_per_share', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('dividend_yield', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('eps', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('revenue_per_share_ttm', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('profit_margin', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('operating_margin_ttm', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('return_on_assets_ttm', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('return_on_equity_ttm', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('revenue_ttm', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('gross_profit_ttm', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('diluted_eps_ttm', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('quarterly_earnings_growth_yoy', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('quarterly_revenue_growth_yoy', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('analyst_target_price', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('analyst_rating_strong_buy', models.IntegerField(blank=True, null=True)),
                ('analyst_rating_buy', models.IntegerField(blank=True, null=True)),
                ('analyst_rating_hold', models.IntegerField(blank=True, null=True)),
                ('analyst_rating_sell', models.IntegerField(blank=True, null=True)),
                ('analyst_rating_strong_sell', models.IntegerField(blank=True, null=True)),
                ('trailing_pe', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('forward_pe', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('price_to_sales_ratio_ttm', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('price_to_book_ratio', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('ev_to_revenue', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('ev_to_ebitda', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('beta', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('week_52_high', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('week_52_low', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('day_50_moving_average', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('day_200_moving_average', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('shares_outstanding', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('dividend_date', models.DateField(blank=True, null=True)),
                ('ex_dividend_date', models.DateField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'stocks_stock',
                'indexes': [models.Index(fields=['sector'], name='stocks_stoc_sector_6c2055_idx'), models.Index(fields=['industry'], name='stocks_stoc_industr_f83c5c_idx'), models.Index(fields=['market_capitalization'], name='stocks_stoc_market__dfade5_idx'), models.Index(fields=['last_updated'], name='stocks_stoc_last_up_3b4825_idx'), models.Index(fields=['symbol', 'sector'], name='stocks_stoc_symbol_001729_idx'), models.Index(fields=['real_time_price'], name='stocks_stoc_real_ti_7a2280_idx')],
            },
        ),
        migrations.CreateModel(
            name='IncomeStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_date', models.DateField(db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('KRW', 'KRW')], default='USD', max_length=10)),
                ('period_type', models.CharField(choices=[('annual', 'Annual'), ('quarterly', 'Quarterly')], db_index=True, max_length=10)),
                ('fiscal_year', models.IntegerField(db_index=True)),
                ('fiscal_quarter', models.IntegerField(blank=True, db_index=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('total_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('gross_profit', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('cost_of_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('cost_of_goods_and_services_sold', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('operating_income', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('selling_general_and_administrative', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('research_and_development', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('operating_expenses', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('investment_income_net', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('net_interest_income', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('interest_income', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('interest_expense', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('non_interest_income', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('other_non_operating_income', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('depreciation', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('depreciation_and_amortization', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('income_before_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('income_tax_expense', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('interest_and_debt_expense', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('net_income_from_continuing_operations', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('comprehensive_income_net_of_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('ebit', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('ebitda', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('net_income', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.stock')),
            ],
            options={
                'db_table': 'stocks_income_statement',
                'indexes': [models.Index(fields=['stock', 'fiscal_year'], name='stocks_inco_stock_i_892024_idx'), models.Index(fields=['period_type', 'fiscal_year'], name='stocks_inco_period__f37249_idx')],
                'unique_together': {('stock', 'period_type', 'fiscal_year', 'fiscal_quarter')},
            },
        ),
        migrations.CreateModel(
            name='DailyPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('KRW', 'KRW')], default='USD', max_length=10)),
                ('date', models.DateField(db_index=True)),
                ('open_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('high_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('low_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('close_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('volume', models.BigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.stock')),
            ],
            options={
                'verbose_name': 'Daily Price',
                'verbose_name_plural': 'Daily Prices',
                'db_table': 'stocks_daily_price',
                'indexes': [models.Index(fields=['stock', 'date'], name='stocks_dail_stock_i_1e5613_idx'), models.Index(fields=['date', 'volume'], name='stocks_dail_date_85d705_idx'), models.Index(fields=['stock', '-date'], name='stocks_dail_stock_i_5c51bc_idx')],
                'unique_together': {('stock', 'date')},
            },
        ),
        migrations.CreateModel(
            name='CashFlowStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_date', models.DateField(db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('KRW', 'KRW')], default='USD', max_length=10)),
                ('period_type', models.CharField(choices=[('annual', 'Annual'), ('quarterly', 'Quarterly')], db_index=True, max_length=10)),
                ('fiscal_year', models.IntegerField(db_index=True)),
                ('fiscal_quarter', models.IntegerField(blank=True, db_index=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('operating_cashflow', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('payments_for_operating_activities', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('proceeds_from_operating_activities', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('change_in_operating_liabilities', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('change_in_operating_assets', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('depreciation_depletion_and_amortization', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('capital_expenditures', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('change_in_receivables', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('change_in_inventory', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('profit_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('cashflow_from_investment', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('cashflow_from_financing', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('proceeds_from_repayments_of_short_term_debt', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('payments_for_repurchase_of_common_stock', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('payments_for_repurchase_of_equity', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('payments_for_repurchase_of_preferred_stock', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('dividend_payout', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('dividend_payout_common_stock', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('dividend_payout_preferred_stock', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('proceeds_from_issuance_of_common_stock', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('proceeds_from_issuance_of_long_term_debt_and_capital_securities_net', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('proceeds_from_issuance_of_preferred_stock', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('proceeds_from_repurchase_of_equity', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('proceeds_from_sale_of_treasury_stock', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('change_in_cash_and_cash_equivalents', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('change_in_exchange_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('net_income', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.stock')),
            ],
            options={
                'db_table': 'stocks_cash_flow_statement',
                'indexes': [models.Index(fields=['stock', 'fiscal_year'], name='stocks_cash_stock_i_5d7422_idx'), models.Index(fields=['period_type', 'fiscal_year'], name='stocks_cash_period__e67df9_idx')],
                'unique_together': {('stock', 'period_type', 'fiscal_year', 'fiscal_quarter')},
            },
        ),
        migrations.CreateModel(
            name='BalanceSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_date', models.DateField(db_index=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('KRW', 'KRW')], default='USD', max_length=10)),
                ('period_type', models.CharField(choices=[('annual', 'Annual'), ('quarterly', 'Quarterly')], db_index=True, max_length=10)),
                ('fiscal_year', models.IntegerField(db_index=True)),
                ('fiscal_quarter', models.IntegerField(blank=True, db_index=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('total_assets', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('total_current_assets', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('cash_and_cash_equivalents_at_carrying_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('cash_and_short_term_investments', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('inventory', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('current_net_receivables', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('total_non_current_assets', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('property_plant_equipment', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('accumulated_depreciation_amortization_ppe', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('intangible_assets', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('intangible_assets_excluding_goodwill', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('goodwill', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('investments', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('long_term_investments', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('short_term_investments', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('other_current_assets', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('other_non_current_assets', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('total_liabilities', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('total_current_liabilities', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('current_accounts_payable', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('deferred_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('current_debt', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('short_term_debt', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('total_non_current_liabilities', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('capital_lease_obligations', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('long_term_debt', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('current_longterm_debt', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('longterm_debt_noncurrent', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('short_longterm_debt_total', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('other_current_liabilities', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('other_non_current_liabilities', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('total_shareholder_equity', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('treasury_stock', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('retained_earnings', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('common_stock', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('common_stock_shares_outstanding', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.stock')),
            ],
            options={
                'db_table': 'stocks_balance_sheet',
                'indexes': [models.Index(fields=['stock', 'fiscal_year'], name='stocks_bala_stock_i_393052_idx'), models.Index(fields=['period_type', 'fiscal_year'], name='stocks_bala_period__82b5a8_idx')],
                'unique_together': {('stock', 'period_type', 'fiscal_year', 'fiscal_quarter')},
            },
        ),
        migrations.CreateModel(
            name='WeeklyPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('KRW', 'KRW')], default='USD', max_length=10)),
                ('date', models.DateField(db_index=True)),
                ('open_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('high_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('low_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('close_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('volume', models.BigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('week_start_date', models.DateField(db_index=True)),
                ('week_end_date', models.DateField(db_index=True)),
                ('average_volume', models.BigIntegerField(blank=True, null=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.stock')),
            ],
            options={
                'verbose_name': 'Weekly Price',
                'verbose_name_plural': 'Weekly Prices',
                'db_table': 'stocks_weekly_price',
                'indexes': [models.Index(fields=['stock', 'date'], name='stocks_week_stock_i_1a3c5d_idx'), models.Index(fields=['stock', '-date'], name='stocks_week_stock_i_f8dbef_idx')],
                'unique_together': {('stock', 'date')},
            },
        ),
    ]
